<resources>
    <string name="app_name">LearnProgrammingApp</string>

    <string name="hint_email">Email</string>
    <string name="hint_password">Password</string>
    <string name="hint_name">Name</string>
    <string name="btn_login">LOGIN</string>
    <string name="btn_link_to_register">Not a member? Sign up now!</string>
    <string name="btn_link_to_login">Already registered! Login Me!</string>

    <string-array name="PYTHON_0">
        <item>Зачем изучать Python? Где используется?\n\n\nНа сегодняшний день Python входит в ТОП-3 востребованных языков программирования.\n\n\nPython используется для разработки веб-сайтов, игровых платформ, систем управления искусственным интеллектом. И даже используется в некоторых космических программах.</item>
        <item>Размышлять о надобности изучения этого языка программирования не приходится. И самое главное – Python-разработчикам готовы платить большие деньги.\n\n\nPython хорош тем, что лишен необходимости ставить навязчивые \";\". Но чувствителен к табуляции и регистру.</item>
        <item>В общем, познакомились. Остальное будет дальше.\n\n\nНа протяжении всего курса вы будете помогать «Соне» решать небольшие проблемы с созданием программ на Python. И попутно учиться.\n\n\n«Соня» очень надеется на вашу помощь. Поехали!</item>
    </string-array>

    <string-array name="PYTHON_1">
        <item>«Переменные. Ввод/вывод данных в консоль»\n\nПеременная – это ячейка в памяти, у которой есть имя, а внутри этой ячейки лежит какая-то информация определенного типа (например: слова, буквы, числа).\n\n\nУ Сони есть 2 коробочки. Они обе подписаны и в них можно положить только числа. При этом имя коробочек (переменных) не может начинаться с цифры или каких-либо знаков (только буквы) и не может содержать пробелы.</item>
        <item>Сейчас эти коробочки пустые. Соня их заполняет:\n\nBox1 = 5\nBox2 = 12\n\nТеперь она хочет сложить эти числа. Но их же нужно где-то хранить. Соня достаёт ещё одну коробочку и заполняет её:\nBoxSum = Box1 + Box2</item>
        <item>Круто. Кажется, это готовая программа. Чтобы вывести результат в консоль воспользуемся командой print():\n\nprint(BoxSum)\n\nВ консоли видим:\n17</item>
        <item>Воу! Это работает. Но Соня не собирается останавливаться на достигнутом. Теперь она хочет сделать программу, чтобы пользователь сам заполнял эти коробочки (переменные). Для этого есть команда input():\n\nBox1 = input()\nBox2 = input()\nBoxSum = Box1 + Box2\nprint(BoxSum)</item>
        <item>К сожалению, так сразу не получится. Дело в том, что в языке программирования Python все вводимые пользователем данные хранятся в переменных строкового (буквенного) типа.</item>
        <item>Хорошо. А какие типы переменных вообще существуют в Python? Вот их список:\n\n\nboolean – логическое значение True или False\n· int – представляет целое число, например, 1, 4, 8, 50.\n· float – представляет число с плавающей точкой, например, 1.2 или 34.76\n· complex – комплексные числа\n· str – строки, например "hello". В Python 3.x строки представляют набор символов в кодировке Unicode\n· bytes – последовательность чисел в диапазоне 0–255\n· byte array - массив байтов, аналогичен bytes с тем отличием, что может изменяться\n· list - список\n· tuple - кортеж\n· set - неупорядоченная коллекция уникальных объектов\n· frozen set - то же самое, что и set, только не может изменяться (immutable)\n· dict - словарь, где каждый элемент имеет ключ и значени</item>
        <item>Хм. Слишком сложно!? Нет. Остановимся на одном, который нам нужен. Так как мы складываем два целых числа, то нам подходит тип данных int. Про остальные типы мы поговорим позже.</item>
        <item>Чтобы сделать из строки число, напишем так:\n\nBox1 = int(input())\nBox2 = int(input())\nBoxSum = Box1 + Box2\nprint(BoxSum)\n\nТеперь программа заработает как надо, и Соня сможет ввести числа с клавиатуры.</item>
        <item>То, что мы сейчас сделали, называется преобразование типов. Про это мы тоже поговорим чуть позже. А сейчас рассмотрим, какие арифметические операции можно проводить с переменными:\n\n\n· Сложение (Box1 + Box2)\n· Вычитание (Box1 - Box2)\n· Деление (Box1 / Box2)\n· Умножение (Box1 * Box2)\n· Получение целой части от деления (Box1 // Box2)\n· Остаток от деления (Box1 % Box2)\n· Возведение в степень (Box1 ** Box2</item>
        <item>За этот урок Соня узнала несколько новых команд:\n\n\n1. print() – выводит текст\n2. input() – позволяет вводить данные с клавиатуры\n3. int() – преобразовывает переменную типа «строка» (str) в целое число (int)</item>
    </string-array>

    <string-array name="CiPlusPlus_0">
        <item>Язык программирования С++ является высокоуровневым языком, на котором возможно создание самых различных приложений.\n\n  Данный язык можно использовать в программах любого уровня, в которых  важны скорость и производительность. С помощью С++ можно создавать графические приложения, игры с насыщенной визуализацией, различные мобильные приложения и даже web-приложения.  </item>
        <item> Немного истории\n\n Язык С++ был разработан в 1979 году Бьерном Страуструпом в качестве дополнения к языку С. После создания Страуструп называл С++ как "C with classes" (С с классами). Фактически С++ отличало от С только возможность объектно-ориентированного программирования.\n В дальнейшем времени в новый язык были добавлены новые возможности, которые делали С с классами другим языком программирования, вследствие чего язык «С с классами» был переименован в С++. И с этого времени языки стали развиваться независимо друг от друга.\n От С язык программирования С++ унаследовал богатые возможности по работе с памятью. Именно поэтому С++ находит своё применение в системном программировании, например , при создании антивирусов, операционных систем.  Большая часть ОС (операционной системы)  Windows была создана на С++ .</item>
    </string-array>

    <string-array name="CiPlusPlus_1">
        <item> «Переменные»\n\n Все переменные имеют тип данных, например, такой тип данных как int – целочисленный тип данных, может иметь в себе только целые числа.Для каждой переменной в программе тип данных присваивается при объявлении\n\nОсновные типы данных:\nint – целочисленный;\nfloat – с плавающей запятой;\ndouble – с плавающей запятой, двойной точности;\nbool – логический;\nchar – символьный;  </item>
        <item> Объявдение переменных:\n\n int a;\n float b;\n double c;\n bool d = true;\n char f = "s";</item>
    </string-array>

    <string-array name="CiPlusPlus_2">
        <item> Первая программа\n\n В качестве среды разработки под Windows советую использовать Visual Studio 2019.\n Для создания проекты нужно в открывшемся меня выбрать « Создать проект» затем «Консольное приложение», после нужно придумать любое название для программы и нажать «Создать»\n Вот что получилось:\n тут картинка будет</item>
        <item> Теперь рассмотрим синтаксис:\n Директива #include необходима для подключения различных файлов. Строка #include ""iostream">" отвечает за возможность ввода и вывода данных на экран.\nСтрока std::cout « "Hello World!\n"; означает вывод сообщения «Hello World!» на экран.\n Оператор cout нужен для вывода текстана экран консоли, , после него идут («). Потом идет текст, который нужно вывести. Текст помещается в двойные кавычки. Оператор (\n) переводит текст на строку ниже.\n После каждой команды ставится точка с запятой(;)\n Запуск программы\n\n Для начала отладки программы достаточно нажать клавишу F5.\n Результатом программы будет вывод в консоли строки «Hello World!»</item>
    </string-array>

    <string-array name="CSHARP_0">
        <item>Устал я</item>
        <item> ПОмогите</item>
        <item>Хелп</item>
    </string-array>

    <string-array name="CSHARP_1">
        <item>отпутити</item>
        <item>я хотю домой</item>
        <item>смэрть</item>
    </string-array>

    <string-array name="CSHARP_2">
        <item>хотю быть котом</item>
        <item>или псом</item>
        <item>или черепахой</item>
    </string-array>

</resources>